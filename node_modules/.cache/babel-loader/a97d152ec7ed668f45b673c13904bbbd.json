{"ast":null,"code":"var _jsxFileName = \"/Users/carlostrujillosamper/Ironhack/webmad2019/week7/thursday/daily/lab-react-ironbeers/carlosbeers/src/components/NewBeer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NewBeer extends Component {\n  constructor(props) {\n    super(props); //             will help us to toggle add task form   \n    //                      |\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const name = this.state.name;\n      const tagline = this.state.tagline;\n      const image_url = this.state.image_url;\n      const contributed_by = this.state.contributed_by; // const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n      // it has to be the 'id' because we are referencing project \n      // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n      // { name, tagline, projectID } => this is 'req.body' that will be received on the server side in this route, \n      // so the names have to match\n\n      axios.post(\"http://localhost:5000/new\", {\n        name,\n        tagline,\n        image_url,\n        contributed_by\n      }).then(() => {\n        // after submitting the form, retrieve project one more time so the new task is displayed as well \n        //              |\n        this.setState({\n          name: \"\",\n          tagline: \"\",\n          image_url: \"\",\n          contributed_by: \"\"\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.showNewBeerForm = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Add Beer\"), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: e => this.handleChange(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"tagline:\"), React.createElement(\"textarea\", {\n        name: \"tagline\",\n        value: this.state.tagline,\n        onChange: e => this.handleChange(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"image\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"contributed_by\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"contributed_by\",\n        value: this.state.contributed_by,\n        onChange: e => this.handleChange(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      name: \"beer name\",\n      tagline: \"your beer tagline\",\n      image_url: \"your photo URL\",\n      contributed_by: \"your contributor\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.showNewBeerForm());\n  }\n\n}\n\nexport default NewBeer;","map":{"version":3,"sources":["/Users/carlostrujillosamper/Ironhack/webmad2019/week7/thursday/daily/lab-react-ironbeers/carlosbeers/src/components/NewBeer.js"],"names":["React","Component","axios","NewBeer","constructor","props","handleFormSubmit","event","preventDefault","name","state","tagline","image_url","contributed_by","post","then","setState","catch","error","console","log","handleChange","target","value","showNewBeerForm","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NewBeer extends Component {\n  constructor(props){\n      super(props);          //             will help us to toggle add task form   \n                            //                      |\n      this.state = {name: \"beer name\", tagline: \"your beer tagline\", image_url: \"your photo URL\", contributed_by: \"your contributor\"};\n  }\n \n   \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const name = this.state.name;\n    const tagline = this.state.tagline;\n    const image_url = this.state.image_url;\n    const contributed_by = this.state.contributed_by;\n\n    // const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n                                                // it has to be the 'id' because we are referencing project \n                                                // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n    \n    // { name, tagline, projectID } => this is 'req.body' that will be received on the server side in this route, \n    // so the names have to match\n    axios.post(\"http://localhost:5000/new\", { name,tagline, image_url, contributed_by })\n    .then( () => {\n          // after submitting the form, retrieve project one more time so the new task is displayed as well \n          //              |\n        \n        this.setState({name: \"\", tagline: \"\", image_url: \"\", contributed_by: \"\"});\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n      const {name, value } = event.target;\n      this.setState({[name]: value});\n  }\n\n\n\n  showNewBeerForm = () => {\n   \n        return(\n            <div>\n                  <h3>Add Beer</h3>\n                  <form onSubmit={this.handleFormSubmit}>\n                  <label>name:</label>\n                  <input type=\"text\" name=\"name\" value={this.state.name} onChange={ e => this.handleChange(e)}/>\n                  <label>tagline:</label>\n                  <textarea name=\"tagline\" value={this.state.tagline} onChange={ e => this.handleChange(e)} />\n                  <label>image</label>\n                  {/* <input type=\"text\" name=\"image\" value={this.state.image_url} onChange={ e => this.handleChange(e)}/> */}\n                  \n                  <label>contributed_by</label>\n                  <input type=\"text\" name=\"contributed_by\" value={this.state.contributed_by} onChange={ e => this.handleChange(e)}/>\n\n                  <input type=\"submit\" value=\"Submit\" />\n                  \n                  </form>\n            </div>\n          )\n    \n  }\n\n  render(){\n    return(\n      <div>\n            <hr />\n            { this.showNewBeerForm() }\n      </div>\n    )\n  }\n}\n\nexport default NewBeer;"]},"metadata":{},"sourceType":"module"}